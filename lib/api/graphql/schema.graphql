type Query {
	getTravelPost(id: ID!): TravelPost @aws_cognito_user_pools @aws_iam
	listTravelPosts: [TravelPost]! @aws_cognito_user_pools @aws_iam
}

type Mutation {
	createTravelPost(input: TravelPostCreateInput!): TravelPost
		@aws_cognito_user_pools
	updateTravelPost(input: TravelPostUpdateInput!): TravelPost
		@aws_cognito_user_pools
	deleteTravelPost(id: ID!): TravelPost @aws_cognito_user_pools
}

type Subscription {
	onTravelPostCreate: TravelPost @aws_subscribe(mutations: ["createTravelPost"])
}

type TravelPost @aws_cognito_user_pools @aws_iam {
	id: ID!
	createdAt: AWSDateTime!
	updatedAt: AWSDateTime!
	title: String!
	description: String!
	imgKey: String!
}

input TravelPostCreateInput {
	id: ID
	title: String!
	description: String
	imgKey: String!
}

input TravelPostUpdateInput {
	id: ID! # as opposed to creating, an ID is required
	title: String!
	description: String
	imgKey: String!
}
